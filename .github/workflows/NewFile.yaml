name: Build and Push
#
#trigger
on:
   push:
     branches:
        - 'release/v[0-9]+.[0-9]*'

jobs:
    #name of your job
    fs-scan:
        #runner
        runs-on: ubuntu-latest    
        if: "!startsWith(github.event.head_commit.message, '#NORUN')"
        #steps in this job
        steps:
          - name: checkout source code
            uses: actions/checkout@v4


            #Trivy fs -s file(.)
          - name: Run Trivy vulnerability scanner in fs mode
            uses: aquasecurity/trivy-action@master
            with:
                scan-type: 'fs'
                scan-ref: '.'
                format: 'table'
                output: 'trivy-report.txt'
                github-pat: ${{ secrets.MY_API }} # or ${{ secrets.github_pat_name }} if you're using a PAT
                severity: 'CRITICAL' #CRITICAL

          - name: Upload trivy report as a Github artifact
            uses: actions/upload-artifact@v4
            with:
              name: trivy-sbom-report
              path: './trivy-report.txt'

          - name: Upload Trivy report to Slack
            uses: MeilCli/slack-upload-file@v4
            with:
                slack_token: ${{secrets.P_SLACK_BOT_TOKEN}}
                channel_id: ${{secrets.P_SLACK_CHANNEL_ID}}
                file_path: './trivy-report.txt'

            #install Cosign
          # - name: Install Cosign
          #   uses: sigstore/cosign-installer@v3.5.0
            

          # - name: Build and push Docker image
          #   uses: docker/build-push-action@v2
          #   with:
          #     username: ${{ secrets.DOCKERHUB_USERNAME }}
          #     password: ${{ secrets.DOCKERHUB_TOKEN }}
          #     repository: ${{ github.repository }}
          #     tag_with_ref: true
      
          # - name: Generate Cosign Key Pairs
          #   id: generate_keys
          #   run: |
          #     cosign generate-key-pair

          # - name: Sign Docker Image
          #   run: |
          #     cosign sign --key cosign.key ${{ github.repository }}:${{ github.sha }}
          #   env:
          #     COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}





           #Slack notification (Currently, fomart is wrong)
          - name: Set Slack message
            id: set-slack-message
            run: |
                SLACK_TITLE="Image build and signed"
                SLACK_MESSAGE="*Name:* person name\n*Metriculation:* person number\n*Email:* person email\n*Git:* ${{ github.server_url }}/${{ github.repository }}\n*Image:* Image URL"

          - name: Slack Notification
            uses: rtCamp/action-slack-notify@v2
            env:
                SLACK_WEBHOOK: ${{ secrets.P_SLACK_API }}
                SLACK_MESSAGE: ${{ steps.set-slack-message.outputs.message }}


          - name: Send GitHub Action trigger data to Slack workflow
            id: slack
            uses: slackapi/slack-github-action@v1.26.0
            with:
                payload: |
                 { 
                    "blocks": [
                    {
                        "type": "section",
                        "fields": [
                        {
                            "type": "mrkdwn",
                            "text": "*Name:* person name\n*Metriculation:* person number\n*Email:* person email\n*Git:* ${{github.server_url}}/${{github.repository}}\n*Image:* <https://hub.docker.com/repository/docker/${{ github.repository }}>"

                        }]
                        }
                    ]
                 }
            env:
                 SLACK_WEBHOOK_URL: ${{ secrets.P_SLACK_API }}
                 SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
