name: Build and Push

#trigger
on:
   push:
     branches:
        - 'release/v[0-9]+.[0-9]*'

jobs:
    #name of your job
    fs-scan:
        #runner
        runs-on: ubuntu-latest    
        if: "!startsWith(github.event.head_commit.message, '#NORUN')"
        #steps in this job
        steps:
          - name: checkout source code
            uses: actions/checkout@v4


            #Trivy fs -s file(.)
          - name: Run Trivy vulnerability scanner in fs mode
            uses: aquasecurity/trivy-action@master
            with:
                scan-type: 'fs'
                scan-ref: '.'
                output: 'trivy-report.txt'
                severity: 'CRITICAL' #CRITICAL



            #install Cosign
          - name: Install Cosign
            uses: sigstore/cosign-installer@v3.5.0
            
            #docker build -t <acc name>/my-app:<git commit> #
            # Docker push <acct name> / my-app:<git-commit> push image to docker 
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3
      
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
      
          - name: Build and push
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          - run: |
                echo "${{ github.repository }}:${{ github.event.head_commit.message }}"
                docker build . -t ${{github.repository }}:${{ github.event.head_commit.message }}
                docker push ${{ github.repository }}:${{ github.event.head_commit.message }}

          
            #consign generate key pairs
            #consign sign--key consign.key <account>/myapp:<git-commit>
          # - name: Generate Cosign Key Pairs
          #   id: generate_keys
          #   run: |
          #     cosign generate-key-pair github://laysiong/go-fortune


          #   ## Error is file path directionary
          # - name: Sign Docker Image
          #   run: |
          #       cosign sign --key cosign.key ${{ github.repository }}:${{ github.event.head_commit.message }}
          #   env:
          #      COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

     
          - name: Upload Trivy report to Slack on failure
           #if: failure()
            uses: MeilCli/slack-upload-file@v4
            with:
                channel: ${{ secrets.P_SLACK_API }} 
                token: ${{ secrets.P_SLACK_BOT_TOKEN }}
                attachments: trivy-report.txt


           #Slack notification (Currently, fomart is wrong)
          - name: Set Slack message
            id: set-slack-message
            run: |
                SLACK_TITLE="Image build and signed"
                SLACK_MESSAGE="*Name:* person name\n*Metriculation:* person number\n*Email:* person email\n*Git:* ${{ github.server_url }}/${{ github.repository }}\n*Image:* Image URL"

          - name: Slack Notification
            uses: rtCamp/action-slack-notify@v2
            env:
                SLACK_WEBHOOK: ${{ secrets.P_SLACK_API }}
                SLACK_MESSAGE: ${{ steps.set-slack-message.outputs.message }}


          - name: Send GitHub Action trigger data to Slack workflow
            id: slack
            uses: slackapi/slack-github-action@v1.26.0
            with:
                payload: |
                 { 
                    "blocks": [
                    {
                        "type": "section",
                        "fields": [
                        {
                            "type": "mrkdwn",
                            "text": "*Name:* person name\n*Metriculation:* person number\n*Email:* person email\n*Git:* ${{github.server_url}}/${{github.repository}}\n*Image:* <https://hub.docker.com/repository/docker/${{ github.repository }}>"

                        }]
                        }
                    ]
                 }
            env:
                 SLACK_WEBHOOK_URL: ${{ secrets.P_SLACK_API }}
                 SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
