name: Build and Push

#trigg
on:
   push:
     branches:
        - 'release/v[0-9]+.[0-9]*'

jobs:
    #name of your job
    fs-scan:
        #runner
        runs-on: ubuntu-latest    
        if: "!startsWith(github.event.head_commit.message, '#NORUN')"
        #steps in this job
        steps:
          - name: checkout source code
            uses: actions/checkout@v4


            #Trivy fs -s file(.)
          - name: Run Trivy vulnerability scanner in fs mode
            uses: aquasecurity/trivy-action@master
            with:
                scan-type: 'fs'
                scan-ref: '.'
                format: 'json' ## i try table, could not work
                output: './trivy-report.json'
                github-pat: ${{ secrets.MY_API }} # or ${{ secrets.github_pat_name }} if you're using a PAT
                severity: 'HIGH' #CRITICAL

          - name: Set VULNS output
            id: set-vulns-output
            run: echo "::set-output name=vulns::$(cat ./trivy-report.json | jq '.Results[] | has("Vulnerabilities")')"

             
          - name: Convert Trivy report to Slack-compatible format
            if: ${{ steps.set-vulns-output.outputs.vulns == 'true' }}
            uses: aquasecurity/trivy-action@0.12.0
            with:
                scan-type: 'convert'
                vuln-type: ""
                image-ref: './trivy-report.json'
                format: 'table'
                output: './trivy-report.txt'


            #install Cosign
          - name: Install Cosign
            if: ${{ steps.set-vulns-output.outputs.vulns != 'true' }}
            uses: sigstore/cosign-installer@v3.5.0
            
      
          - name: Log into registry
            if: ${{ steps.set-vulns-output.outputs.vulns != 'true' }}
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.dockerhub_username }}
              password: ${{ secrets.dockerhub_token }}            
      

          - name: build and push docker image
            if: ${{ steps.set-vulns-output.outputs.vulns != 'true' }}
            id: build-and-push
            uses: docker/build-push-action@v5
            with:
              context: .
              push : true
              tags: ${{ github.repository }}:${{github.run_id}}
              secrets: |
                GIT_AUTH_TOKEN=${{ secrets.MY_API }}



              #consign generate-key-pairs
              #consign sign --key cosign.key <acct_name>/myapp:<git-commit>
          - name: Generate Cosign Key Pairs
            if: ${{ steps.set-vulns-output.outputs.vulns != 'true' }}
            id: generate_keys
            run: |
              cosign generate-key-pair

          - name: Get Docker image digest
            id: get-digest
            if: ${{ steps.set-vulns-output.outputs.vulns != 'true' }}
            run: |
                DIGEST=$(docker manifest inspect ${{ github.repository }}:${{ github.run_id }} | jq -r '.config.digest')
                echo "::set-output name=digest::$DIGEST"

          - name: Sign Docker Image
            if: ${{ steps.set-vulns-output.outputs.vulns != 'true' }}
            run: |
                cosign sign --key cosign.key ${{ github.repository }}@${{ steps.get-digest.outputs.digest }}
            env:
                COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}



          #Slack Notifcaiton
          - name: Slack_Summary
            id: Slack_Summary
            run: |
              if [[ "${{ steps.set-vulns-output.outputs.vulns }}" == 'true' ]]; then
                  slack_color="danger"    
                  slack_message="Failed trivy scan, see uploaded report"
                else
                  slack_color="good"
                  slack_message="* Name:* Toh Lay Siong
              * Metriculation:* A0291916W
              * Email:* mrlaysiong@gmail.com
              * Git:* ${{ github.server_url }}/${{ github.repository }}
              * Image:* <https://hub.docker.com/repository/docker/${{ github.repository }}>"
                fi

                echo "slack-color=$slack_color" >> $GITHUB_ENV
                echo 'slack-message<<EOF' >> $GITHUB_OUTPUT
                echo "$slack_message" >> $GITHUB_OUTPUT
                echo 'EOF' >> $GITHUB_OUTPUT

          - name: Slack Notification
            uses: rtCamp/action-slack-notify@v2
            env:
                SLACK_WEBHOOK: ${{ secrets.P_SLACK_API }}
                SLACK_COLOR: ${{ env.slack-color }} # or a specific color like 'good' or '#ff00ff'
                SLACK_MESSAGE: ${{ steps.Slack_Summary.outputs.slack-message }}
                SLACK_TITLE: 'Image build and signed'


          - name: Upload trivy report as a Github artifact
            if: ${{ steps.set-vulns-output.outputs.vulns == 'true' }}
            uses: actions/upload-artifact@v4
            with:
              name: trivy-sbom-report
              path: './trivy-report.txt'

          - name: Upload Trivy report to Slack
            if: ${{ steps.set-vulns-output.outputs.vulns == 'true' }}
            uses: MeilCli/slack-upload-file@v4
            with:
                slack_token: ${{secrets.P_SLACK_BOT_TOKEN}}
                channel_id: ${{secrets.P_SLACK_CHANNEL_ID}}
                file_path: './trivy-report.txt'




  
